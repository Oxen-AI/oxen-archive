name: Performance Test

on:
  schedule:
    - cron: "0 0 * * *" # Runs at 00:00 UTC every day
  workflow_dispatch: # Allows manual triggering

jobs:
  performance_test:
    runs-on: macos-latest

    env:
      OXEN_API_KEY: ${{ secrets.OXEN_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install pkg-config ffmpeg imagemagick

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Specify the Python version you need

      - name: Install LLVM Linker
        run: |
          brew install llvm
          echo '[target.aarch64-apple-darwin]' >> ~/.cargo/config
          echo 'rustflags = ["-C", "link-arg=-fuse-ld=lld"]' >> ~/.cargo/config

      - name: Verify LLVM Installation
        run: |
          # Check if the LLVM linker exists at the specified path
          if [ -f /opt/homebrew/opt/llvm/bin/ld64.lld ]; then
            echo "LLVM linker found at /opt/homebrew/opt/llvm/bin/ld64.lld"
          else
            echo "LLVM linker not found at /opt/homebrew/opt/llvm/bin/ld64.lld"
          fi

          # Check if 'lld' is available in the PATH
          if command -v lld > /dev/null; then
            echo "'lld' is available in the PATH"
          else
            echo "'lld' is not available in the PATH"
          fi

          # Use 'which' to find the location of 'lld'
          LLD_PATH=$(which lld)
          if [ -n "$LLD_PATH" ]; then
            echo "'lld' found at $LLD_PATH"
          else
            echo "'lld' not found in the system PATH"
          fi

          # Use 'find' and 'grep' to locate 'lld' in common directories
          echo "Searching for 'lld' in /opt/homebrew/opt/llvm/bin and /usr/local/bin..."
          FOUND_LLD=$(find /opt/homebrew/opt/llvm/bin /usr/local/bin -name 'lld' 2>/dev/null | grep 'lld')
          if [ -n "$FOUND_LLD" ]; then
            echo "'lld' found at the following locations:"
            echo "$FOUND_LLD"
          else
            echo "'lld' not found in the specified directories"
            exit 1
          fi

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install latest Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: x86_64-apple-darwin
          default: true
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip || true
          pip install -r cli-tests/requirements.txt || true

      - name: Build Rust project
        run: cargo build

      - name: Run tests
        run: ruby cli-test/spec/spec_remote_hub/test.rb